# Configuration file
# key = value
# configure your datasource
%prod.quarkus.datasource.url=jdbc:postgresql://postgres-database/person
%prod.quarkus.datasource.driver=org.postgresql.Driver
%dev.quarkus.datasource.url=jdbc:h2:mem:person
%dev.quarkus.datasource.driver=org.h2.Driver
%test.quarkus.datasource.url=jdbc:h2:mem:person
%test.quarkus.datasource.driver=org.h2.Driver

quarkus.datasource.username=sa
quarkus.datasource.password=sa

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.http.test-port=8083
database.up=true

greeting.message=hello
greeting.name=Ryan
greeting.suffix=!

quarkus.swagger-ui.always-include=true

#Configure the kafka sink
%prod.mp.messaging.outgoing.generated-name.bootstrap.servers=names-cluster-kafka-bootstrap:9092
%prod.mp.messaging.outgoing.generated-name.connector=smallrye-kafka
%prod.mp.messaging.outgoing.generated-name.topic=names
%prod.mp.messaging.outgoing.generated-name.value.serializer=org.apache.kafka.common.serialization.StringSerializer

#Configure the Kafka source
%prod.mp.messaging.incoming.names.bootstrap.servers=names-cluster-kafka-bootstrap:9092
%prod.mp.messaging.incoming.names.connector=smallrye-kafka
%prod.mp.messaging.incoming.names.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#DEV mode conect to localhost
%dev.mp.messaging.outgoing.generated-name.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.generated-name.connector=smallrye-kafka
%dev.mp.messaging.outgoing.generated-name.topic=names
%dev.mp.messaging.outgoing.generated-name.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#Configure the Kafka source
%dev.mp.messaging.incoming.names.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.names.connector=smallrye-kafka
%dev.mp.messaging.incoming.names.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# quarkus.log.level=FINER